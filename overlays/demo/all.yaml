apiVersion: v1
kind: Namespace
metadata:
  name: rdepot-demo
---
apiVersion: v1
data:
  py-demo.repository.yml: |
    name: py-demo
    publicationUri: http://rdepot.demo/repo/py-demo
    serverAddress: http://rdepot-repo:8080/py-demo
    technology: PYTHON
  r-demo.repository.yml: |
    name: r-demo
    publicationUri: http://rdepot.demo/repo/r-demo
    serverAddress: http://rdepot-repo:8080/r-demo
    technology: R
kind: ConfigMap
metadata:
  name: demo-repositories
  namespace: rdepot-demo
---
apiVersion: v1
data:
  application.yml: |
    declarative: true

    additional-repository-configs:
      paths:
        - /opt/rdepot/declared_repositories

    allowed-origin: http://rdepot.demo

    api-token:
      secret: SecretKeyToGenJWTs
      issuer: RDepot
      audience:
        - RDepot
      lifetime: 5000

    access-token:
      lifetime-default: 30
      lifetime-configurable: true
      length: 32
      allowed-characters: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

    # Database related properties
    db:
      driver: org.postgresql.Driver
      url: jdbc:postgresql://oa-rdepot-db:5432/rdepot
      username: rdepot
      password: mysecretpassword

    # Email related properties
    email:
      password:
      username:
      from:
      smtp:
        host:
        port:
        auth:
        starttls:

    # Package upload related properties
    package:
      upload:
        dir: /opt/rdepot

    # Repository generation related properties
    repository:
      generation:
        dir: /opt/rdepot/generated

    spring:
      liquibase:
        enabled: true

    server:
      servlet:
        context-path: /server
      error:
        include-stacktrace: never
        path: /error

    management:
      endpoints:
        enabled-by-default: false
        web:
          exposure:
            include: "health"
      endpoint:
        health:
          enabled: true
      metrics:
        web:
          server:
            request:
              autotime:
                enabled: false

    springdoc:
      pathsToMatch: /api/v2/**
      api-docs:
        path: /v2/api-docs
      swagger-ui:
        path: /docs/api.html
        disable-swagger-default-url: true
        url: /v2/api-docs
        display-query-params: true
      default-produces-media-type: application/json

    logging:
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-4r [%t] %5p traceId=%X{traceIdMDC} %c{1} : %m %n"
      level:
        liquibase:
          parser: INFO
        org:
          springframework:
            web:
              filter:
                CommonsRequestLoggingFilter: INFO

    #storage related properties
    localStorage:
      maxRequestSize: 10

    storage:
      implementation: local
  authentication.yml: |
    app:
      authentication: simple
      simple:
        users:
          - login: einstein
            password: testpassword
          - login: tesla
            password: testpassword
          - login: galileo
            password: testpassword
          - login: newton
            password: testpassword
        default:
          admins:
            - einstein
kind: ConfigMap
metadata:
  name: rdepot-app
  namespace: rdepot-demo
---
apiVersion: v1
data:
  nginx.conf: |+
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;
        proxy_read_timeout 600;

        #gzip  on;
        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/sites-enabled/*;
    }

  sites-enabled-rdepot: "server {\n  listen                80;\n  server_name           _;\n\n
    \   location ~* /repo/(?:.+)/src/ {\n      root \t\t/opt/rdepot;\n      access_log
    \         /var/log/nginx/repo.access.log;\n      error_log           /var/log/nginx/repo.error.log;\n
    \     autoindex on;\n    }\n\n    location /repo/ {\n      root \t\t/opt/rdepot;\n
    \     access_log          /var/log/nginx/repo.access.log;\n      error_log           /var/log/nginx/repo.error.log;\n
    \     autoindex on;\n      try_files $uri $uri/index.html @pypi;\n    }\n\n    location
    @pypi {\n      rewrite    repo/(.*)/(.*)/ /simple/$2/ break;\n      proxy_pass
    https://pypi.org;\n      proxy_set_header  Host             pypi.org;\n      proxy_ssl_server_name
    on;\n    }\n}\n"
kind: ConfigMap
metadata:
  name: rdepot-repo
  namespace: rdepot-demo
---
apiVersion: v1
data:
  password: cmRlcG90MTIz
  username: cmRlcG90
kind: Secret
metadata:
  name: rdepot-db-credentials
  namespace: rdepot-demo
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rdepot-app
  name: rdepot-app
  namespace: rdepot-demo
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: rdepot-app
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rdepot-client
  name: rdepot-client
  namespace: rdepot-demo
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: rdepot-client
---
apiVersion: v1
kind: Service
metadata:
  name: rdepot-db
  namespace: rdepot-demo
spec:
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app: rdepot-db
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rdepot-repo
  name: rdepot-repo
  namespace: rdepot-demo
spec:
  clusterIP: None
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: http-api
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: rdepot-repo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rdepot-client
  namespace: rdepot-demo
spec:
  selector:
    matchLabels:
      app: rdepot-client
  template:
    metadata:
      labels:
        app: rdepot-client
    spec:
      containers:
      - env:
        - name: VITE_LOGIN_SIMPLE
          value: "true"
        - name: VITE_LOGIN_OIDC
          value: "false"
        - name: VITE_URL_PREFIX
          value: /
        - name: VITE_SERVER_ADDRESS
          value: http://rdepot.demo/server
        - name: VITE_DEV_MODE
          value: "false"
        - name: VITE_OIDC_AUTHORITY
          value: ""
        - name: VITE_OIDC_REDIRECT_URI
          value: ""
        - name: VITE_OIDC_CLIENT_ID
          value: ""
        - name: VITE_OIDC_POST_LOGOUT_REDIRECT_URI
          value: ""
        - name: VITE_OIDC_RESPONSE_TYPE
          value: code
        - name: VITE_OIDC_SCOPE
          value: openid profile email
        - name: VITE_CURRENT_COMMIT_VERSION
          value: ""
        image: openanalytics/rdepot-client:2.1.1
        imagePullPolicy: IfNotPresent
        name: rdepot-client
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 128Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rdepot-app
  namespace: rdepot-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rdepot-app
  serviceName: rdepot-app
  template:
    metadata:
      labels:
        app: rdepot-app
    spec:
      containers:
      - env:
        - name: SPRING_LIQUIBASE_URL
          value: jdbc:postgresql://rdepot-db:5432/rdepot
        - name: SPRING_LIQUIBASE_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: rdepot-db-credentials
        - name: SPRING_LIQUIBASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: rdepot-db-credentials
        - name: DB_URL
          value: jdbc:postgresql://rdepot-db:5432/rdepot
        - name: DB_USERNAME
          value: ""
          valueFrom:
            secretKeyRef:
              key: username
              name: rdepot-db-credentials
        - name: DB_PASSWORD
          value: ""
          valueFrom:
            secretKeyRef:
              key: password
              name: rdepot-db-credentials
        image: openanalytics/rdepot-app:2.1.1
        imagePullPolicy: IfNotPresent
        name: rdepot-app
        ports:
        - containerPort: 8080
          name: web
        resources:
          requests:
            cpu: 250m
            memory: 2Gi
        volumeMounts:
        - mountPath: /opt/rdepot/repositories
          name: app-data
          subPath: repositories
        - mountPath: /opt/rdepot/authentication.yml
          name: app-config
          subPath: authentication.yml
        - mountPath: /opt/rdepot/declared_repositories
          name: repositories-config
        - mountPath: /opt/rdepot/application.yml
          name: app-config
          subPath: application.yml
      volumes:
      - configMap:
          name: demo-repositories
        name: repositories-config
      - configMap:
          name: rdepot-app
        name: app-config
  volumeClaimTemplates:
  - metadata:
      name: app-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rdepot-db
  namespace: rdepot-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rdepot-db
  serviceName: rdepot-db
  template:
    metadata:
      labels:
        app: rdepot-db
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: rdepot-db-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: rdepot-db-credentials
        image: library/postgres:alpine
        name: postgresql
        ports:
        - containerPort: 5432
          name: tcp-postgresql
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rdepot-repo
  namespace: rdepot-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rdepot-repo
  serviceName: rdepot-repo
  template:
    metadata:
      labels:
        app: rdepot-repo
    spec:
      containers:
      - image: openanalytics/rdepot-repo:2.1.1
        imagePullPolicy: IfNotPresent
        name: rdepot-repo
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 250m
            memory: 1Gi
        volumeMounts:
        - mountPath: /opt/rdepot
          name: repository
      - image: library/nginx:latest
        imagePullPolicy: Always
        name: rdepot-repo-proxy
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: config-volume
          subPath: nginx.conf
        - mountPath: /etc/nginx/sites-enabled/rdepot
          name: config-volume
          subPath: sites-enabled-rdepot
        - mountPath: /opt/rdepot/repo
          name: repository
          readOnly: true
      volumes:
      - configMap:
          name: rdepot-repo
        name: config-volume
      - emptyDir: {}
        name: repository
  volumeClaimTemplates:
  - metadata:
      name: repository
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/session-cookie-name: route
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: rdepot
  namespace: rdepot-demo
spec:
  ingressClassName: nginx
  rules:
  - host: rdepot.demo
    http:
      paths:
      - backend:
          service:
            name: rdepot-app
            port:
              number: 80
        path: /server(/|$)(.*)
        pathType: Prefix
      - backend:
          service:
            name: rdepot-client
            port:
              number: 80
        path: /
        pathType: Prefix
      - backend:
          service:
            name: rdepot-repo
            port:
              number: 80
        path: /repo(/|$)(.*)
        pathType: Prefix
